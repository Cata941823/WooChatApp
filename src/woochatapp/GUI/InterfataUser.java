/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package woochatapp.GUI;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import woochatapp.login.Login;
import woochatapp.user.User;

/**
 *
 * @author anton
 */
public class InterfataUser extends javax.swing.JFrame{

    /**
     * Creates new form InterfataUser
     */
    public InterfataUser() throws SQLException{
    try{
        initComponents();
            jTextArea1.setVisible(false);
            addPhotoButton.setVisible(false);
            sendButton.setVisible(false);
            jTextField1.setVisible(false);
            jTextArea1.setEnabled(false);
            addPhotoButton.setEnabled(false);
            sendButton.setEnabled(false);
            jTextField1.setEnabled(false);
        BufferedReader buff = new BufferedReader(new FileReader("C:\\Users\\Cata\\Desktop\\LoggedInfo.txt")); //change the path
         {
            loggedName = buff.readLine();
            userLoggedName.setText(loggedName);
            
        }
    }
    catch(Exception e1){
            JOptionPane.showMessageDialog(null, e1);
        }
    }
    private String loggedName;
    /*public InterfataUser() throws FileNotFoundException, IOException{
        initComponents();
        BufferedReader buff = new BufferedReader(new FileReader("E:\\DSChatApp\\WooChatApp\\WooChatApp\\src\\woochatapp\\login\\LoggedInfo.txt")); //change the path
         {
            loggedName = buff.readLine();
            userLoggedName.setText(loggedName);
        }
        ArrayList<User> users = new ArrayList();
    }*/
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userLoggedName = new javax.swing.JLabel();
        userTextLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchInputField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        openConversation = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        addPhotoButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 640));
        setSize(new java.awt.Dimension(800, 640));

        userLoggedName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userLoggedName.setText("jLabel1");

        userTextLabel.setText(" List of users");

        searchButton.setText("Cauta");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchInputField.setText("Cauta utilizator...");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "E-mail user"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        openConversation.setText("Deschide conversatia");
        openConversation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openConversationActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea1);

        jTextField1.setText("Trimite mesaj...");
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        addPhotoButton.setText("Add photo");
        addPhotoButton.setEnabled(false);
        addPhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhotoButtonActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userLoggedName)
                    .addComponent(userTextLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(openConversation, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPhotoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(userLoggedName)
                .addGap(18, 18, 18)
                .addComponent(userTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1)
                            .addComponent(addPhotoButton)
                            .addComponent(sendButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(searchInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openConversation))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<User> afiseazaUseri(String cautare){
        ArrayList<User> users = new ArrayList<User>();
        System.out.println("merge array list");
        ResultSet rs;
        Statement st;
        try{
            System.out.println("merge try");
            Connection con = getConnection();
            System.out.println("Conexiune realizata");
            st = con.createStatement();
            String query = "SELECT * FROM dxm4AFuYMf.users WHERE CONCAT(`nume`, `prenume`, `email`) LIKE '%"+cautare+"%'";
            rs = st.executeQuery(query);
            User user=null;
            System.out.println("merge User user");
            while (rs.next()){
                user = new User();
                System.out.println(user.getNume());
                user.setNume(rs.getString("nume"));
                System.out.println(user.getPrenume());
                user.setPrenume(rs.getString("prenume"));
                System.out.println(user.getEmail());
                user.setEmail(rs.getString("email"));
                System.out.println("merge User=new User");
                System.out.println(rs.getString("nume").toString()+rs.getString("prenume").toString()+rs.getString("email").toString());
                users.add(user);
            }
        }catch (Exception e){
            System.out.println(e.getMessage());
        }
        return users;
    }
    public void gasesteUseri(){
        ArrayList<User> utilizatoriGasiti = afiseazaUseri(searchInputField.getText());
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"nume","prenume","email"});
        Object[] randuri = new Object[3];
        for(int i=0;i<utilizatoriGasiti.size();i++){
            randuri[0]=utilizatoriGasiti.get(i).getNume();
            randuri[1]=utilizatoriGasiti.get(i).getPrenume();
            randuri[2]=utilizatoriGasiti.get(i).getEmail();
            System.out.println(randuri[0]);
            model.addRow(randuri);
        }
        jTable1.setModel(model);
    }   
    public Connection getConnection(){
        Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/dxm4AFuYMf","dxm4AFuYMf","sdsKcU3uUv");
        
        }catch(Exception el){
            System.out.println(el.getMessage());
        }
        return con;
    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        gasesteUseri();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void openConversationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openConversationActionPerformed
        // TODO add your handling code here:
        boolean convIncep = false;
        int row = jTable1.getSelectedRow();
        int column = jTable1.getSelectedColumn();
        String emailreceptor = (String)jTable1.getValueAt(row,column);
        System.out.println("---0"+emailreceptor+"-----");
        File file = new File("C:\\Users\\Cata\\Desktop\\LoggedInfo.txt");
        Scanner sc=null;
        try {
            sc = new Scanner(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfataUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        sc.nextLine();
        String emailinitiator = sc.next();
        ResultSet rs;
        PreparedStatement pst;
        try{
            Connection con=null;
            System.out.println("merge try");
            con = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/dxm4AFuYMf?useSSL=false","dxm4AFuYMf","sdsKcU3uUv");
            System.out.println("Conexiune realizata");
            System.out.println(emailinitiator);
            System.out.println(emailreceptor);
            String query = "SELECT * FROM dxm4AFuYMf.conversations "
                    + "WHERE emailinitiator LIKE '%"+emailinitiator+"%' "
                    + "AND emailreceptor LIKE '%"+emailreceptor+"%' "
                    + "OR emailinitiator LIKE '%"+emailreceptor+"%' "
                    + "AND emailreceptor LIKE '%"+emailinitiator+"%'";
            System.out.println("merge select");
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            /*if(rs.next())
            {
                if((rs.getNString(emailinitiator).equals(emailinitiator) && rs.getNString(emailreceptor).equals(emailreceptor)) || ((rs.getNString(emailreceptor).equals(emailreceptor) & rs.getNString(emailinitiator).equals(emailinitiator))))
                convIncep = true;
            }*/
            //if(convIncep = false){
                System.out.println("a intrat aici");
                if(!(jTable1.getSelectionModel().isSelectionEmpty())){
                    jTextArea1.setVisible(true);
                    addPhotoButton.setVisible(true);
                    sendButton.setVisible(true);
                    jTextField1.setVisible(true);
                    jTextArea1.setEnabled(true);
                    addPhotoButton.setEnabled(true);
                    sendButton.setEnabled(true);
                    jTextField1.setEnabled(true);
                    String queryInsert = "INSERT INTO conversations (nume, emailinitiator, emailreceptor) VALUES(?, ?, ?)";
                    System.out.println("merge insert");
                    PreparedStatement stmtInser = con.prepareStatement(queryInsert);
                    stmtInser.setString(1, emailinitiator+", "+emailreceptor);
                    stmtInser.setString(2, emailinitiator);
                    stmtInser.setString(3, emailreceptor);
                    stmtInser.executeUpdate();
                    
                }
                con.close();
            //}
            /*if(convIncep = true){
                    jTextArea1.setVisible(true);
                    addPhotoButton.setVisible(true);
                    sendButton.setVisible(true);
                    jTextField1.setVisible(true);
                    jTextArea1.setEnabled(true);
                    addPhotoButton.setEnabled(true);
                    sendButton.setEnabled(true);
                    jTextField1.setEnabled(true);
                    
            } */
        }catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_openConversationActionPerformed

    private void addPhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhotoButtonActionPerformed
        // TODO add your handling code here:
        try{
            Connection con;
            ResultSet rs;
            PreparedStatement pst;
            String conversatie = null;
            String textAfisat = null;
            String user = null;
            con = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/dxm4AFuYMf?useSSL=false","dxm4AFuYMf","sdsKcU3uUv");
            String query = "SELECT * FROM dxm4AFuYMf.messages";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            while(rs.next())
            {
               user = rs.getNString("scriitor");
               textAfisat= rs.getNString("mesaj");
               conversatie = user + " " + textAfisat + "\n";
            }
            System.out.println("-------------\n" +conversatie);
            jTextArea1.setText(conversatie);
        }catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addPhotoButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        
        int idconv=0;
        String scriitor = null;
        String mesaj = null;
        try{
            Connection con=null;  
            ResultSet rs;
            PreparedStatement pst;
            con = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/dxm4AFuYMf?useSSL=false","dxm4AFuYMf","sdsKcU3uUv");
            String query = "SELECT * FROM dxm4AFuYMf.conversations";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            mesaj = jTextField1.getText().toString();
            if(rs.next())
            {
                scriitor = rs.getNString("emailinitiator");
                idconv = rs.getInt("idconv");
            }
        }catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
        try {
            Connection con;
            PreparedStatement pst;
            con = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/dxm4AFuYMf?useSSL=false","dxm4AFuYMf","sdsKcU3uUv");
                String queryInsert = "INSERT INTO messages (scriitor, idconversatie, mesaj) VALUES(?, ?, ?)";
                System.out.println("Macar mergeinsertul?!?!");
                PreparedStatement stmtInser = con.prepareStatement(queryInsert);
                stmtInser.setString(1,scriitor);
                stmtInser.setInt(2, idconv);
                stmtInser.setString(3, mesaj);
                stmtInser.executeUpdate();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_sendButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfataUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfataUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfataUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfataUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Login interfata=new Login();
                    interfata.setVisible(true);
                    interfata.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    interfata.setSize(800,640);
                }catch(Exception e1){
                JOptionPane.showMessageDialog(null, e1);
        }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPhotoButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton openConversation;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInputField;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel userLoggedName;
    private javax.swing.JLabel userTextLabel;
    // End of variables declaration//GEN-END:variables

    
    
}
